<Window x:Class="WpfApp2.SpeakerVerificationPass"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp2"
        mc:Ignorable="d"
        Title="Speaker Verification"
        Height="{Binding Source={x:Static SystemParameters.PrimaryScreenHeight}}"
        Width="{Binding Source={x:Static SystemParameters.PrimaryScreenWidth}}"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize"
        ShowInTaskbar="False"
        Topmost="True"
        WindowState="Maximized"
        RenderOptions.BitmapScalingMode="HighQuality"
        RenderOptions.EdgeMode="Aliased"
        UseLayoutRounding="True"
        SnapsToDevicePixels="True">

    <Window.Resources>
        <!-- Brushes -->
        <LinearGradientBrush x:Key="GlassOverlay" StartPoint="0,0" EndPoint="1,1" Opacity="0.85">
            <GradientStop Color="#40000000" Offset="0"/>
            <GradientStop Color="#60000000" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="CardGradient" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#E6000000" Offset="0"/>
            <GradientStop Color="#F01A1A2E" Offset="0.5"/>
            <GradientStop Color="#FF000000" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ButtonGradient" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#FF4A90E2" Offset="0"/>
            <GradientStop Color="#FF7B68EE" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ButtonHoverGradient" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#FF5BA0F2" Offset="0"/>
            <GradientStop Color="#FF8B78FE" Offset="1"/>
        </LinearGradientBrush>

        <!-- Button Style -->
        <Style x:Key="GlassButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource ButtonGradient}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#60FFFFFF"/>
            <Setter Property="Padding" Value="20,12"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="12"
                                UseLayoutRounding="True">
                            <Border.Effect>
                                <DropShadowEffect Color="Black" BlurRadius="6" ShadowDepth="2" Opacity="0.4"/>
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"
                                              UseLayoutRounding="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource ButtonHoverGradient}"/>
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#80FFFFFF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonBorder" Property="RenderTransform">
                                    <Setter.Value>
                                        <ScaleTransform ScaleX="0.97" ScaleY="0.97"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

      
        <Style x:Key="GlassPasswordBox" TargetType="PasswordBox">
            <Setter Property="Background"         Value="#B0000000"/>
            <Setter Property="Foreground"         Value="White"/>
            <Setter Property="BorderBrush"        Value="#AAFFFFFF"/>
            <Setter Property="BorderThickness"    Value="2"/>
            <Setter Property="Padding"            Value="18,15"/>
            <Setter Property="FontSize"           Value="18"/>
            <Setter Property="FontFamily"         Value="Segoe UI"/>
            <Setter Property="FontWeight"         Value="Medium"/>
            <Setter Property="UseLayoutRounding"  Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
           
        </Style>


        <!-- Animations -->
        <Storyboard x:Key="FadeInAnimation">
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="0" To="1" Duration="0:0:0.2"/>
        </Storyboard>

        <Storyboard x:Key="ScaleInAnimation">
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
                             From="0.9" To="1" Duration="0:0:0.25">
                <DoubleAnimation.EasingFunction>
                    <QuadraticEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
                             From="0.9" To="1" Duration="0:0:0.25">
                <DoubleAnimation.EasingFunction>
                    <QuadraticEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
    </Window.Resources>

    <!-- UI Layout -->
    <Grid CacheMode="BitmapCache">
        <Rectangle Fill="{StaticResource GlassOverlay}">
            <Rectangle.Effect>
                <BlurEffect Radius="15"/>
            </Rectangle.Effect>
        </Rectangle>

        <Border x:Name="DialogCard"
                Background="{StaticResource CardGradient}"
                CornerRadius="25"
                Width="450" Height="550"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                BorderThickness="1"
                BorderBrush="#40FFFFFF"
                RenderTransformOrigin="0.5,0.5">
            <Border.RenderTransform>
                <ScaleTransform/>
            </Border.RenderTransform>
            <Border.Effect>
                <DropShadowEffect Color="Black" BlurRadius="25" ShadowDepth="8" Opacity="0.6"/>
            </Border.Effect>

            <Grid Margin="50,45">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Lock Icon -->
                <Border Grid.Row="0" Width="70" Height="70" Background="#50FFFFFF" CornerRadius="35" Margin="0,0,0,25">
                    <Viewbox Width="35" Height="35">
                        <Canvas Width="24" Height="24">
                            <Path Fill="#FFFFFFFF"
                                  Data="M12,1L3,5V11C3,16.55 6.84,21.74 12,23C17.16,21.74 21,16.55 21,11V5L12,1M12,7C13.4,7 14.8,8.6 14.8,10V11H15.7C16.4,11 17,11.4 17,12V16C17,16.6 16.6,17 16,17H8C7.4,17 7,16.6 7,16V12C7,11.4 7.4,11 8,11H8.3V10C8.3,8.6 9.6,7 12,7M12,8.2C10.2,8.2 9.5,9.2 9.5,10V11H14.5V10C14.5,9.2 13.8,8.2 12,8.2Z"/>
                        </Canvas>
                    </Viewbox>
                </Border>

                <!-- Title -->
                <TextBlock Grid.Row="1" Text="Speaker Verification" FontSize="26" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" Margin="0,0,0,12"/>

                <!-- Subtitle -->
                <TextBlock Grid.Row="2" Text="Enter your login password to disable" FontSize="14" Foreground="#DDFFFFFF" HorizontalAlignment="Center" Margin="0,0,0,40"/>

                <!-- Label -->
                <TextBlock Grid.Row="3" Text="Password" FontSize="15" FontWeight="SemiBold" Foreground="White" HorizontalAlignment="Left" Margin="5,0,0,12"/>

                <!-- Password Entry + Error -->
                <StackPanel Grid.Row="4" VerticalAlignment="Top" Margin="0,0,0,20">
                    <PasswordBox x:Name="PasswordInput"
                                 Style="{StaticResource GlassPasswordBox}"
                                 Height="60"
                                 KeyDown="PasswordInput_KeyDown"/>

                    <TextBlock x:Name="ErrorMessage"
                               Text="Invalid password. Please try again."
                               FontSize="13"
                               FontWeight="Medium"
                               Foreground="#FFFF6B6B"
                               HorizontalAlignment="Center"
                               Margin="0,18,0,0"
                               Visibility="Collapsed"/>
                </StackPanel>

                <!-- Buttons -->
                <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,108,0,0" Height="47" VerticalAlignment="Top">
                    <Button Content="Cancel" Style="{StaticResource GlassButton}" Width="110" Click="CancelButton_Click" Height="30">
                        <Button.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Color="#FFFF6B6B" Offset="0"/>
                                <GradientStop Color="#FFFF5252" Offset="1"/>
                            </LinearGradientBrush>
                        </Button.Background>
                    </Button>

                    <Button Content="Verify" Style="{StaticResource GlassButton}" Width="110" Click="VerifyButton_Click"/>
                </StackPanel>

                <!-- Shortcut Hint -->
                <TextBlock Grid.Row="4" Text="Press Enter to verify • Press Escape to cancel" FontSize="10" Foreground="#AAFFFFFF" HorizontalAlignment="Center" Margin="0,190,0,18"/>
            </Grid>
        </Border>

        <!-- Particles -->
        <Canvas IsHitTestVisible="False">
            <Ellipse Width="80" Height="80" Fill="#08FFFFFF" Canvas.Left="150" Canvas.Top="300">
                <Ellipse.Effect>
                    <BlurEffect Radius="15"/>
                </Ellipse.Effect>
                <Ellipse.RenderTransform>
                    <TranslateTransform x:Name="Particle1Transform"/>
                </Ellipse.RenderTransform>
            </Ellipse>

            <Ellipse Width="60" Height="60" Fill="#06FFFFFF" Canvas.Right="200" Canvas.Bottom="350">
                <Ellipse.Effect>
                    <BlurEffect Radius="12"/>
                </Ellipse.Effect>
                <Ellipse.RenderTransform>
                    <TranslateTransform x:Name="Particle2Transform"/>
                </Ellipse.RenderTransform>
            </Ellipse>
        </Canvas>
    </Grid>

    <!-- Triggered Animations -->
    <Window.Triggers>
        <EventTrigger RoutedEvent="Loaded">
            <BeginStoryboard Storyboard="{StaticResource FadeInAnimation}"/>
            <BeginStoryboard Storyboard="{StaticResource ScaleInAnimation}"/>
            <BeginStoryboard>
                <Storyboard RepeatBehavior="Forever">
                    <DoubleAnimation Storyboard.TargetName="Particle1Transform"
                                     Storyboard.TargetProperty="Y"
                                     From="0" To="15" Duration="0:0:6" AutoReverse="True"/>
                    <DoubleAnimation Storyboard.TargetName="Particle2Transform"
                                     Storyboard.TargetProperty="X"
                                     From="0" To="-10" Duration="0:0:8" AutoReverse="True"/>
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>
</Window>
